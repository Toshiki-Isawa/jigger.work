.fullPageScroll
  section.top-section.section1 id="section1"
    = video_tag "https://assets.mixkit.co/videos/preview/mixkit-pouring-ice-and-lemonade-into-a-glass-on-black-background-9418-large.mp4", loop: true, autoplay: true, muted: true, id: "bg-video"
    .header-left
      .text-center.site-title Jigger.
      .contents
        h3.name-title-white Welcome
        p.header-content
          | このサイトはカクテルレシピ検索・投稿サイトです。
          br あなたのお気に入りカクテルを登録したり、あなただけのレシピを公開できます。
          | 今日は何を作りますか？
      .top-button
        = link_to "20歳以上", public_cocktails_path, class:"btn-shine"
        = link_to "20歳未満", search_public_cocktails_path(:name => "none", :search_key => "alcohol"), method: :post, class:"btn-shine"
  section.top-section.section2 id="section2"
    h2.title What about Jigger?
    p.main-text
      | 「Jigger.work」では、様々なカクテルやモクテル（ノンアルコールカクテル）のレシピを掲載しています。 
      br 複数条件での絞り込み機能や、類似度データをもとにして似ているカクテルを表示しています。
      | 投稿レシピの中から、あなたのお気に入りレシピを登録して頂くことで、似ているカクテルの表示精度が上がります。
      br 是非、会員登録をしてあなたの好みのカクテルを教えて下さい。
    = image_tag 'cocktail-index-page.png', class:"section2-img1"
    = image_tag 'cocktail-show-page.png', class:"section2-img2"
  section.top-section.section3 id="section3"
    h2.title How to Use
    p.main-text
      | 未ログインの状態でもレシピの閲覧・検索が可能です。
      br 全ての機能を使用する為にはログインが必要です。まずは、ヘッダーからゲストログインを試してみて下さい。
    = image_tag 'cocktail-search.png', class:"section3-img1 pc-screen"
    = image_tag 'user-show-page.png', class:"section3-img2"

  section.top-section.section4 id="section4"
    h2.title Community
    p.main-text
      | トーク機能を使用することでユーザー同士コミュニケーションを取る事ができます。 
    = image_tag 'talk-room-index.png', class:"section4-img1"
    = image_tag 'talk-room-show.png', class:"section4-img2"

nav.pagination id="pagination"
  a id="pagination1" href="#section1"
  a id="pagination2" href="#section2"
  a id="pagination3" href="#section3"
  a id="pagination4" href="#section4"

  
javascript:
  document.addEventListener('turbolinks:load', function() {

    // スムーススクロール
    const paginations = document.querySelectorAll(".pagination a");
    paginations.forEach(pagination => {
      pagination.addEventListener("click", e => {
        e.preventDefault();
        const targetId = e.target.hash;
        const target = document.querySelector(targetId);
        target.scrollIntoView({ behavior: "smooth" });
      });
    });

    // Intersection Observer
    const sections = document.querySelectorAll(".top-section");
    const observerRoot = document.querySelector(".fullPageScroll");
    const options = {
      root: observerRoot,
      rootMargin: "-50% 0px",
      threshold: 0
    };
    const observer = new IntersectionObserver(doWhenIntersect, options);
    sections.forEach(section => {
      observer.observe(section);
    });

    // 交差したときに呼び出す関数
    function doWhenIntersect(entries) {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          activatePagination(entry.target);
        }
      });
    }

    // ページネーションの大きさを変える関数
    function activatePagination(element) {
      const currentActiveIndex = document.querySelector("#pagination .active");
      if (currentActiveIndex !== null) {
        currentActiveIndex.classList.remove("active");
      }
      const newActiveIndex = document.querySelector(`a[href='#${element.id}']`);
      newActiveIndex.classList.add("active");
    }

  });


